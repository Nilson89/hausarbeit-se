grammar de.nordakademie.xconfigurator.Xconfigurator with org.eclipse.xtext.common.Terminals

generate xconfigurator "http://www.nordakademie.de/xconfigurator/Xconfigurator"

/**
 * @author Julian Kondoch
 * @author Niklas Rothe
 * @author Pascal Laub
 * @author Niels Maseberg
 */

/* Der Xconfigurator besteht aus 0..1 Type-Elementen */
Xconfigurator:
	(steps+=Step | component+=Component)*;

/**
 * Der Aufbau eines Step-Elements
 * 
 * Beispiel:
 * 
 * step <ID> {
 *     predecessor, Vorg채nger des Steps (optional)
 *     successor, Nachfolger des Steps (optional)
 *     elements, enthaltene Elemente (1..*)
 * }
 * 
 */
Step:
	'step' label=STRING? name=ID '{'
	(predecessor+=Predecessor)?
	(successor+=Successor)?
	(elements+=ComponentReference)*
	'}';

ComponentReference:
	'component' '<' component=[Component|ID] '>';

/* Referenz Vorg채nger zu einem Step */
Predecessor:
	'predecessor' '<' step=[Step|ID] '>';

/* Referenz Nachfolger zu einem Step */
Successor:
	'successor' '<' step=[Step|ID] '>';

/**
 * Komponente
 * 
 * Beispiel:
 * 
 * 'component' Manufacturer {
 *     values: ['Audi', 'BMW', 'VW']
 * }
 */
Component:
	'component' label=STRING name=ID '{'
		values=ValueList
		(visibility=AbstractVisible)?
		(description=Description)?
		('selected:' '[' selected=ValueType ']')?
	'}'
;

AbstractVisible:
	'visible: [' condition=AbstractCondition
	']';

AbstractCondition:
	Boolean |
	AbstractIfCondition;
	
AbstractIfCondition:
	if=If
	(elseif+=ElseIf)*
	else=Else;

Condition:
	'(' component=[Component|ID] ' = ' check=STRING ')';

// TODO:type ok? 
// 		Type soll hier daf체r da sein, dass man in der Verarbeitung auslesen kann, 
// 		ob die Bedingung eine And- oder eine Or-Verkn체pfung ist
IfStatement:
	conditions+=Condition
	(type+=('And' | 'Or') conditions+=Condition)*
	'{' return=AbstractCondition '}';

If:
	'If' stmt=IfStatement;

ElseIf:
	'ElseIf' stmt=IfStatement;

Else:
	'Else {' (return=AbstractCondition)
	'}';

Boolean:
	{Boolean} (boolean ?= 'true' | 'false');

/**
 * Liste von Werten
 * 
 * Beispiel:
 * 
 * values: ["Audi", "VW", "Opel"]
 */
Description:
	'description: ' value=STRING;

ValueList:
	{ValueList} 'values: [' values+=ValueType* ']';

/**
 * Einfacher Wert
 * 
 * Beispiel:
 * 
 * "Audi"
 * "BMW"
 * "VW"
 */
ValueType:
	value=STRING;